//
//  Copyright Â© 2014-2023 PSPDFKit GmbH. All rights reserved.
//
//  THIS SOURCE CODE AND ANY ACCOMPANYING DOCUMENTATION ARE PROTECTED BY INTERNATIONAL COPYRIGHT LAW
//  AND MAY NOT BE RESOLD OR REDISTRIBUTED. USAGE IS BOUND TO THE PSPDFKIT LICENSE AGREEMENT.
//  UNAUTHORIZED REPRODUCTION OR DISTRIBUTION IS SUBJECT TO CIVIL AND CRIMINAL PENALTIES.
//  This notice may not be removed from this file.
//

#import <PSPDFKit/PSPDFModelObject.h>
#import <PSPDFKit/PSPDFAnnotation.h>

NS_ASSUME_NONNULL_BEGIN

@class PSPDFAnnotationGroupItem;

/// Returns a template image (UIImageRenderingModeAlwaysTemplate).
///
/// @param item The annotation group item.
/// @param container The containing `AnnotationToolbar`.
/// @param tintColor The tint color applied to the image.
/// @return The custom image.
///
/// @see itemWithType:variant:configurationBlock:
typedef UIImage *_Nonnull (^PSPDFAnnotationGroupItemConfigurationBlock)(PSPDFAnnotationGroupItem *item, id _Nullable container, UIColor *tintColor);

/// Pen Ink annotation, with preset styles for pen for drawing.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringInkPen;
/// Highlighter Ink annotation, with customized presets for improved text highlighting.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringInkHighlighter;
/// The Magic Ink tool variant converts the drawn points to a vector shape if possible.
///
/// Magic Ink supports detecting straight lines and arrows (`PSPDFLineAnnotation`),
/// ellipses (`PSPDFCircleAnnotation`), and rectangles (`PSPDFSquareAnnotation`).
/// If no shape is matched, the drawing will be left as a `PSPDFInkAnnotation`.
///
/// The recognition tolerance can be set with the `magicInkReplacementThreshold` property of `PDFConfiguration`.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringInkMagic;
/// Line annotation variant with an arrow at one end of the line.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringLineArrow;
/// Text annotation variant that defaults to creating callout text annotations.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringFreeTextCallout;
/// Cloudy polygon annotation, with cloudy border preset style.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringPolygonCloud;
/// Line annotation variant with distance measurement label.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringDistanceMeasurement;
/// Polyline annotation variant with perimeter measurement label.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringPerimeterMeasurement;
/// Polygon annotation variant with area measurement label.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringPolygonalAreaMeasurement;
/// Circle annotation variant with area measurement label.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringEllipticalAreaMeasurement;
/// Square annotation variant with area measurement label.
PSPDF_EXPORT PSPDFAnnotationVariantString const PSPDFAnnotationVariantStringRectangularAreaMeasurement;

/// Simple helper that combines a state + variant into a new identifier.
/// Can be used to set custom types in the `PSPDFStyleManager`.
PSPDF_EXPORT PSPDFAnnotationStateVariantID PSPDFAnnotationStateVariantIDMake(PSPDFAnnotationString, PSPDFAnnotationVariantString _Nullable variant) NS_REFINED_FOR_SWIFT;

/// Returns the original annotation state from a string that previously has been generated by `PSPDFAnnotationStateVariantIDMake`.
PSPDF_EXPORT PSPDFAnnotationString PSPDFAnnotationStateFromStateVariantIdentifier(PSPDFAnnotationStateVariantID) NS_REFINED_FOR_SWIFT;

/// Returns the original annotation state variant from a string that previously has been generated by `PSPDFAnnotationStateVariantIDMake`.
PSPDF_EXPORT _Nullable PSPDFAnnotationVariantString PSPDFAnnotationVariantFromStateVariantIdentifier(PSPDFAnnotationStateVariantID) NS_REFINED_FOR_SWIFT;

/// An annotation group items defines one annotation type, optionally with a variant.
PSPDF_CLASS_SUBCLASSING_RESTRICTED_SWIFT(AnnotationToolConfiguration.ToolItem)
@interface PSPDFAnnotationGroupItem : PSPDFModel

PSPDF_EMPTY_INIT_UNAVAILABLE

/// Creates a group item with the specified annotation type.
///
/// @see itemWithType:variant:configurationBlock:
+ (PSPDFAnnotationGroupItem *)itemWithType:(PSPDFAnnotationString)type;

/// Creates a group item with the specified annotation type and optional variant identifier.
///
/// @see itemWithType:variant:configurationBlock:
+ (PSPDFAnnotationGroupItem *)itemWithType:(PSPDFAnnotationString)type variant:(nullable PSPDFAnnotationVariantString)variant;

/// Creates a group item with the specified annotation type, an optional variant identifier and configuration block.
///
/// @param type The annotation type.
/// @param variant An optional annotation string for the item variant. Use variants to add several instances of the same tool with uniquely preservable annotation style settings.
/// @param block An option block, that should return the button's image. If nil, `defaultConfigurationBlock` is used.
/// @note Whenever possible try to return a template image from the configuration block (UIImageRenderingModeAlwaysTemplate). Use the provided tint color only when you need multi-color images.
+ (PSPDFAnnotationGroupItem *)itemWithType:(PSPDFAnnotationString)type variant:(nullable PSPDFAnnotationVariantString)variant configurationBlock:(nullable PSPDFAnnotationGroupItemConfigurationBlock)block;

/// A block that configures a preset image based on the annotation type.
///
/// @note The annotation images are loaded using `-[PSPDFKitGlobal imageNamed:]`, which means that you either need
/// to supply your own icons to that method, use a custom configuration block, or link to `PSPDFKitUI.framework`,
/// if you want to use the default bundled annotation toolbar icons.
+ (PSPDFAnnotationGroupItemConfigurationBlock)defaultConfigurationBlock;

/// The set annotation type.
@property (nonatomic, copy, readonly) PSPDFAnnotationString type;

/// The annotation variant, if set during initialization.
@property (nonatomic, copy, readonly, nullable) PSPDFAnnotationVariantString variant;

/// Used to generate the annotation image. Will be `defaultConfigurationBlock` or `inkConfigurationBlock` in most cases.
@property (nonatomic, copy, readonly) PSPDFAnnotationGroupItemConfigurationBlock configurationBlock;

@end

NS_ASSUME_NONNULL_END
